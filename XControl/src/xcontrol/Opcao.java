/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package xcontrol;

import java.awt.Color;
import java.time.LocalTime;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Samuel Araújo (XDetalfa Entertainment)
 */
public class Opcao extends javax.swing.JInternalFrame {
    
    public static Opcao op = new Opcao();
    
    /**
     * Creates new form Opcao
     */
    public Opcao() {
        initComponents();
                                
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
                
        //CONFIGURAÇÕES DO QUARTO 4
        BtnQuart4.setVisible(true);
        PanelQuart4.setVisible(false);
        BtnReservQuart4.setVisible(false);
        BtnFinalQuart4.setVisible(false);
        
        //CONFIGURAÇÕES DO QUARTO 6
        BtnQuart6.setVisible(true);
        PanelQuart6.setVisible(false);
        BtnReservQuart6.setVisible(false);
        BtnFinalQuart6.setVisible(false);
        
        //CONFIGURAÇÕES DO QUARTO 8
        BtnQuart8.setVisible(true);
        PanelQuart8.setVisible(false);
        BtnReservQuart8.setVisible(false);
        BtnFinalQuart8.setVisible(false);
        
        //CONFIGURAÇÕES DO QUARTO 10
        BtnQuart10.setVisible(true);
        PanelQuart10.setVisible(false);
        BtnReservQuart10.setVisible(false);
        BtnFinalQuart10.setVisible(false);
        
        //CONFIGURAÇÕES DO QUARTO 12
        BtnQuart12.setVisible(true);
        PanelQuart12.setVisible(false);
        BtnReservQuart12.setVisible(false);
        BtnFinalQuart12.setVisible(false);
        
        //CONFIGURAÇÕES DO QUARTO 14
        BtnQuart14.setVisible(true);
        PanelQuart14.setVisible(false);
        BtnReservQuart14.setVisible(false);
        BtnFinalQuart14.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        QuartDisponivel = new javax.swing.JPanel();
        QuartOcupado = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Quarto6 = new javax.swing.JPanel();
        CronometroQuart6 = new javax.swing.JLabel();
        PanelQuart6 = new javax.swing.JPanel();
        BtnReservQuart6 = new javax.swing.JLabel();
        BtnFinalQuart6 = new javax.swing.JLabel();
        BtnQuart6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        horaQ6 = new javax.swing.JLabel();
        Quarto4 = new javax.swing.JPanel();
        BtnQuart4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        PanelQuart4 = new javax.swing.JPanel();
        BtnReservQuart4 = new javax.swing.JLabel();
        BtnFinalQuart4 = new javax.swing.JLabel();
        CronometroQuart4 = new javax.swing.JLabel();
        horaQ4 = new javax.swing.JLabel();
        Quarto8 = new javax.swing.JPanel();
        CronometroQuart8 = new javax.swing.JLabel();
        BtnQuart8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        PanelQuart8 = new javax.swing.JPanel();
        BtnReservQuart8 = new javax.swing.JLabel();
        BtnFinalQuart8 = new javax.swing.JLabel();
        horaQ8 = new javax.swing.JLabel();
        Quarto10 = new javax.swing.JPanel();
        CronometroQuart10 = new javax.swing.JLabel();
        BtnQuart10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        PanelQuart10 = new javax.swing.JPanel();
        BtnReservQuart10 = new javax.swing.JLabel();
        BtnFinalQuart10 = new javax.swing.JLabel();
        horaQ10 = new javax.swing.JLabel();
        Quarto12 = new javax.swing.JPanel();
        CronometroQuart12 = new javax.swing.JLabel();
        BtnQuart12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        PanelQuart12 = new javax.swing.JPanel();
        BtnReservQuart12 = new javax.swing.JLabel();
        BtnFinalQuart12 = new javax.swing.JLabel();
        horaQ12 = new javax.swing.JLabel();
        Quarto14 = new javax.swing.JPanel();
        CronometroQuart14 = new javax.swing.JLabel();
        BtnQuart14 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        PanelQuart14 = new javax.swing.JPanel();
        BtnReservQuart14 = new javax.swing.JLabel();
        BtnFinalQuart14 = new javax.swing.JLabel();
        horaQ14 = new javax.swing.JLabel();
        BtnFechar = new javax.swing.JLabel();

        setBorder(null);
        setVisible(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        QuartDisponivel.setBackground(new java.awt.Color(0, 255, 0));
        QuartDisponivel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout QuartDisponivelLayout = new javax.swing.GroupLayout(QuartDisponivel);
        QuartDisponivel.setLayout(QuartDisponivelLayout);
        QuartDisponivelLayout.setHorizontalGroup(
            QuartDisponivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        QuartDisponivelLayout.setVerticalGroup(
            QuartDisponivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        QuartOcupado.setBackground(new java.awt.Color(255, 0, 0));
        QuartOcupado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout QuartOcupadoLayout = new javax.swing.GroupLayout(QuartOcupado);
        QuartOcupado.setLayout(QuartOcupadoLayout);
        QuartOcupadoLayout.setHorizontalGroup(
            QuartOcupadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        QuartOcupadoLayout.setVerticalGroup(
            QuartOcupadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Quartos Disponiveis.");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Quartos Ocupados.");

        Quarto6.setBackground(new java.awt.Color(255, 255, 255));
        Quarto6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto6MouseExited(evt);
            }
        });
        Quarto6.setLayout(null);

        CronometroQuart6.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart6.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart6.setText("00:00:00");
        Quarto6.add(CronometroQuart6);
        CronometroQuart6.setBounds(7, 241, 288, 30);

        BtnReservQuart6.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart6.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart6.setText("Reservar");
        BtnReservQuart6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BtnReservQuart6.setOpaque(true);
        BtnReservQuart6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart6MouseMoved(evt);
            }
        });
        BtnReservQuart6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart6MousePressed(evt);
            }
        });

        BtnFinalQuart6.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart6.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart6.setText("Finalizar");
        BtnFinalQuart6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BtnFinalQuart6.setOpaque(true);
        BtnFinalQuart6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart6MouseMoved(evt);
            }
        });
        BtnFinalQuart6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart6MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart6Layout = new javax.swing.GroupLayout(PanelQuart6);
        PanelQuart6.setLayout(PanelQuart6Layout);
        PanelQuart6Layout.setHorizontalGroup(
            PanelQuart6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelQuart6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart6Layout.setVerticalGroup(
            PanelQuart6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart6Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(PanelQuart6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnFinalQuart6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        Quarto6.add(PanelQuart6);
        PanelQuart6.setBounds(10, 150, 290, 90);

        BtnQuart6.setBackground(java.awt.Color.green);
        BtnQuart6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart6Layout = new javax.swing.GroupLayout(BtnQuart6);
        BtnQuart6.setLayout(BtnQuart6Layout);
        BtnQuart6Layout.setHorizontalGroup(
            BtnQuart6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart6Layout.setVerticalGroup(
            BtnQuart6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto6.add(BtnQuart6);
        BtnQuart6.setBounds(0, 0, 30, 30);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("6");
        Quarto6.add(jLabel4);
        jLabel4.setBounds(48, 40, 210, 140);

        horaQ6.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ6.setForeground(new java.awt.Color(0, 0, 0));
        Quarto6.add(horaQ6);
        horaQ6.setBounds(40, 1, 260, 30);

        Quarto4.setBackground(new java.awt.Color(255, 255, 255));
        Quarto4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto4MouseExited(evt);
            }
        });
        Quarto4.setLayout(null);

        BtnQuart4.setBackground(java.awt.Color.green);
        BtnQuart4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart4Layout = new javax.swing.GroupLayout(BtnQuart4);
        BtnQuart4.setLayout(BtnQuart4Layout);
        BtnQuart4Layout.setHorizontalGroup(
            BtnQuart4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart4Layout.setVerticalGroup(
            BtnQuart4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto4.add(BtnQuart4);
        BtnQuart4.setBounds(0, 0, 30, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("4");
        jLabel3.setVerifyInputWhenFocusTarget(false);
        Quarto4.add(jLabel3);
        jLabel3.setBounds(48, 40, 210, 140);

        BtnReservQuart4.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart4.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart4.setText("Reservar");
        BtnReservQuart4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BtnReservQuart4.setOpaque(true);
        BtnReservQuart4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart4MouseMoved(evt);
            }
        });
        BtnReservQuart4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart4MousePressed(evt);
            }
        });

        BtnFinalQuart4.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart4.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart4.setText("Finalizar");
        BtnFinalQuart4.setOpaque(true);
        BtnFinalQuart4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart4MouseMoved(evt);
            }
        });
        BtnFinalQuart4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart4MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart4Layout = new javax.swing.GroupLayout(PanelQuart4);
        PanelQuart4.setLayout(PanelQuart4Layout);
        PanelQuart4Layout.setHorizontalGroup(
            PanelQuart4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart4Layout.setVerticalGroup(
            PanelQuart4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelQuart4Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(PanelQuart4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnFinalQuart4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        Quarto4.add(PanelQuart4);
        PanelQuart4.setBounds(10, 150, 290, 90);

        CronometroQuart4.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart4.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart4.setText("00:00:00");
        Quarto4.add(CronometroQuart4);
        CronometroQuart4.setBounds(7, 241, 288, 30);

        horaQ4.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ4.setForeground(new java.awt.Color(0, 0, 0));
        Quarto4.add(horaQ4);
        horaQ4.setBounds(40, 1, 260, 30);

        Quarto8.setBackground(new java.awt.Color(255, 255, 255));
        Quarto8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto8MouseExited(evt);
            }
        });
        Quarto8.setLayout(null);

        CronometroQuart8.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart8.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart8.setText("00:00:00");
        Quarto8.add(CronometroQuart8);
        CronometroQuart8.setBounds(7, 241, 288, 30);

        BtnQuart8.setBackground(java.awt.Color.green);
        BtnQuart8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart8Layout = new javax.swing.GroupLayout(BtnQuart8);
        BtnQuart8.setLayout(BtnQuart8Layout);
        BtnQuart8Layout.setHorizontalGroup(
            BtnQuart8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart8Layout.setVerticalGroup(
            BtnQuart8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto8.add(BtnQuart8);
        BtnQuart8.setBounds(0, 0, 30, 30);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("8");
        Quarto8.add(jLabel5);
        jLabel5.setBounds(48, 40, 210, 140);

        BtnReservQuart8.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart8.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart8.setText("Reservar");
        BtnReservQuart8.setOpaque(true);
        BtnReservQuart8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart8MouseMoved(evt);
            }
        });
        BtnReservQuart8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart8MousePressed(evt);
            }
        });

        BtnFinalQuart8.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart8.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart8.setText("Finalizar");
        BtnFinalQuart8.setOpaque(true);
        BtnFinalQuart8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart8MouseMoved(evt);
            }
        });
        BtnFinalQuart8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart8Layout = new javax.swing.GroupLayout(PanelQuart8);
        PanelQuart8.setLayout(PanelQuart8Layout);
        PanelQuart8Layout.setHorizontalGroup(
            PanelQuart8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart8Layout.setVerticalGroup(
            PanelQuart8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart8Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(PanelQuart8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnFinalQuart8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        Quarto8.add(PanelQuart8);
        PanelQuart8.setBounds(10, 150, 290, 90);

        horaQ8.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ8.setForeground(new java.awt.Color(0, 0, 0));
        Quarto8.add(horaQ8);
        horaQ8.setBounds(40, 1, 260, 30);

        Quarto10.setBackground(new java.awt.Color(255, 255, 255));
        Quarto10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto10MouseExited(evt);
            }
        });
        Quarto10.setLayout(null);

        CronometroQuart10.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart10.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart10.setText("00:00:00");
        Quarto10.add(CronometroQuart10);
        CronometroQuart10.setBounds(7, 241, 288, 30);

        BtnQuart10.setBackground(java.awt.Color.green);
        BtnQuart10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart10Layout = new javax.swing.GroupLayout(BtnQuart10);
        BtnQuart10.setLayout(BtnQuart10Layout);
        BtnQuart10Layout.setHorizontalGroup(
            BtnQuart10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart10Layout.setVerticalGroup(
            BtnQuart10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto10.add(BtnQuart10);
        BtnQuart10.setBounds(0, 0, 30, 30);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("10");
        Quarto10.add(jLabel6);
        jLabel6.setBounds(48, 40, 210, 140);

        BtnReservQuart10.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart10.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart10.setText("Reservar");
        BtnReservQuart10.setOpaque(true);
        BtnReservQuart10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart10MouseMoved(evt);
            }
        });
        BtnReservQuart10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart10MousePressed(evt);
            }
        });

        BtnFinalQuart10.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart10.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart10.setText("Finalizar");
        BtnFinalQuart10.setOpaque(true);
        BtnFinalQuart10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart10MouseMoved(evt);
            }
        });
        BtnFinalQuart10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart10MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart10Layout = new javax.swing.GroupLayout(PanelQuart10);
        PanelQuart10.setLayout(PanelQuart10Layout);
        PanelQuart10Layout.setHorizontalGroup(
            PanelQuart10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart10, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart10Layout.setVerticalGroup(
            PanelQuart10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart10Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(PanelQuart10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnFinalQuart10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        Quarto10.add(PanelQuart10);
        PanelQuart10.setBounds(10, 150, 290, 90);

        horaQ10.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ10.setForeground(new java.awt.Color(0, 0, 0));
        Quarto10.add(horaQ10);
        horaQ10.setBounds(40, 1, 260, 30);

        Quarto12.setBackground(new java.awt.Color(255, 255, 255));
        Quarto12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto12MouseExited(evt);
            }
        });
        Quarto12.setLayout(null);

        CronometroQuart12.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart12.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart12.setText("00:00:00");
        Quarto12.add(CronometroQuart12);
        CronometroQuart12.setBounds(7, 241, 288, 30);

        BtnQuart12.setBackground(java.awt.Color.green);
        BtnQuart12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart12Layout = new javax.swing.GroupLayout(BtnQuart12);
        BtnQuart12.setLayout(BtnQuart12Layout);
        BtnQuart12Layout.setHorizontalGroup(
            BtnQuart12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart12Layout.setVerticalGroup(
            BtnQuart12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto12.add(BtnQuart12);
        BtnQuart12.setBounds(0, 0, 30, 30);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("12");
        Quarto12.add(jLabel7);
        jLabel7.setBounds(50, 40, 210, 140);

        BtnReservQuart12.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart12.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart12.setText("Reservar");
        BtnReservQuart12.setOpaque(true);
        BtnReservQuart12.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart12MouseMoved(evt);
            }
        });
        BtnReservQuart12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart12MousePressed(evt);
            }
        });

        BtnFinalQuart12.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart12.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart12.setText("Finalizar");
        BtnFinalQuart12.setOpaque(true);
        BtnFinalQuart12.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart12MouseMoved(evt);
            }
        });
        BtnFinalQuart12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart12MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart12Layout = new javax.swing.GroupLayout(PanelQuart12);
        PanelQuart12.setLayout(PanelQuart12Layout);
        PanelQuart12Layout.setHorizontalGroup(
            PanelQuart12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart12, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart12, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart12Layout.setVerticalGroup(
            PanelQuart12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart12Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(PanelQuart12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnFinalQuart12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        Quarto12.add(PanelQuart12);
        PanelQuart12.setBounds(10, 150, 290, 90);

        horaQ12.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ12.setForeground(new java.awt.Color(0, 0, 0));
        Quarto12.add(horaQ12);
        horaQ12.setBounds(40, 1, 260, 30);

        Quarto14.setBackground(new java.awt.Color(255, 255, 255));
        Quarto14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Quarto14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarto14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarto14MouseExited(evt);
            }
        });
        Quarto14.setLayout(null);

        CronometroQuart14.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        CronometroQuart14.setForeground(new java.awt.Color(0, 0, 0));
        CronometroQuart14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CronometroQuart14.setText("00:00:00");
        Quarto14.add(CronometroQuart14);
        CronometroQuart14.setBounds(7, 241, 288, 30);

        BtnQuart14.setBackground(java.awt.Color.green);
        BtnQuart14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout BtnQuart14Layout = new javax.swing.GroupLayout(BtnQuart14);
        BtnQuart14.setLayout(BtnQuart14Layout);
        BtnQuart14Layout.setHorizontalGroup(
            BtnQuart14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        BtnQuart14Layout.setVerticalGroup(
            BtnQuart14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        Quarto14.add(BtnQuart14);
        BtnQuart14.setBounds(0, 0, 30, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 85)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("14");
        Quarto14.add(jLabel8);
        jLabel8.setBounds(50, 40, 210, 140);

        BtnReservQuart14.setBackground(new java.awt.Color(204, 204, 204));
        BtnReservQuart14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnReservQuart14.setForeground(new java.awt.Color(0, 0, 0));
        BtnReservQuart14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnReservQuart14.setText("Reservar");
        BtnReservQuart14.setOpaque(true);
        BtnReservQuart14.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnReservQuart14MouseMoved(evt);
            }
        });
        BtnReservQuart14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnReservQuart14MousePressed(evt);
            }
        });

        BtnFinalQuart14.setBackground(new java.awt.Color(204, 204, 204));
        BtnFinalQuart14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        BtnFinalQuart14.setForeground(new java.awt.Color(0, 0, 0));
        BtnFinalQuart14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFinalQuart14.setText("Finalizar");
        BtnFinalQuart14.setOpaque(true);
        BtnFinalQuart14.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                BtnFinalQuart14MouseMoved(evt);
            }
        });
        BtnFinalQuart14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnFinalQuart14MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelQuart14Layout = new javax.swing.GroupLayout(PanelQuart14);
        PanelQuart14.setLayout(PanelQuart14Layout);
        PanelQuart14Layout.setHorizontalGroup(
            PanelQuart14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnReservQuart14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(BtnFinalQuart14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelQuart14Layout.setVerticalGroup(
            PanelQuart14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuart14Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(PanelQuart14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnFinalQuart14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnReservQuart14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        Quarto14.add(PanelQuart14);
        PanelQuart14.setBounds(10, 150, 290, 90);

        horaQ14.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        horaQ14.setForeground(new java.awt.Color(0, 0, 0));
        Quarto14.add(horaQ14);
        horaQ14.setBounds(40, 1, 260, 30);

        BtnFechar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BtnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xcontrol/img/Fechar.png"))); // NOI18N
        BtnFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnFecharMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuartDisponivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(QuartOcupado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnFechar)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quarto4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Quarto10, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Quarto6, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(Quarto12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Quarto8, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(Quarto14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuartDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(BtnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuartOcupado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Quarto6, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                        .addComponent(Quarto4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Quarto8, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Quarto14, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(Quarto12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Quarto10, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    //-----------> INICIO DO QUARTO NUMERO 6 <--------------//
    //MOUSE PASSA POR CIMA DO 'QUARTO 6'
    private void Quarto6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto6MouseEntered
        Quarto6.repaint();
        PanelQuart6.setBackground(new Color(0, 0, 0, 100));
        PanelQuart6.setVisible(true);
        if (BtnQuart6.getBackground() == Color.GREEN) {
            BtnFinalQuart6.setVisible(false);
            BtnReservQuart6.setVisible(true);
        } else {
            BtnReservQuart6.setVisible(false);
            BtnFinalQuart6.setVisible(true);
        }
    }//GEN-LAST:event_Quarto6MouseEntered

    //MOUSE SAI DE CIMA DO 'QUARTO 6'
    private void Quarto6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto6MouseExited
        Quarto6.repaint();
        PanelQuart6.setVisible(false);
        BtnReservQuart6.setVisible(false);
        BtnFinalQuart6.setVisible(false);
    }//GEN-LAST:event_Quarto6MouseExited

    private void BtnReservQuart6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart6MouseMoved
        Quarto6.repaint();
        PanelQuart6.setVisible(true);
        BtnReservQuart6.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart6MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart6MousePressed
        Quarto6.repaint();
        BtnQuart6.setBackground(Color.RED);
        BtnReservQuart6.setVisible(false);
        BtnFinalQuart6.setVisible(true);
        op.reiniciarCronometro6();
        
        LocalTime horaAtualQ6 = LocalTime.now();
        int hora = horaAtualQ6.getHour();
        int minuto = horaAtualQ6.getMinute();
        
        horaQ6.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart6MousePressed

    private void BtnFinalQuart6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart6MouseMoved
        Quarto6.repaint();
        PanelQuart6.setVisible(true);
        BtnFinalQuart6.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart6MouseMoved
    
    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart6MousePressed
        Quarto6.repaint();
        BtnQuart6.setBackground(Color.GREEN);
        BtnFinalQuart6.setVisible(false);
        BtnReservQuart6.setVisible(true);
        op.FinalizarCronometro6();
        
        String textoCronometro6 = CronometroQuart6.getText();
        
        String[] partes = textoCronometro6.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            Variaveis.varias.setQ6(25);
        } else if (hora <=1 && minuto >= 11) {
            Variaveis.varias.setQ6(40);
        } else if (hora == 2 && minuto <= 10) {
            Variaveis.varias.setQ6(40);
        } else if (hora == 2 && minuto >= 11) {
            Variaveis.varias.setQ6(50);
        } else if (hora == 3 && minuto <= 10) {
            Variaveis.varias.setQ6(50);
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo6 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ6(calculo6);
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo6 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ6(calculo6);
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo6 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ6(calculo6);
        }
        
        CronometroQuart6.setText("00:00:00");
        horaQ6.setText("");
    }//GEN-LAST:event_BtnFinalQuart6MousePressed
    //-----------> FINAL DO QUARTO NUMERO 6 <--------------//
    
    //TEMPORIZADOR DO QUARTO 6
    public void Cronometro6(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer6 = new Timer();
        Variaveis.varias.timer6.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s6 += 1;
                atualizarCronometro6();

                if (Variaveis.varias.s6 == 60) {
                    Variaveis.varias.s6 += 1;
                    Variaveis.varias.s6 = 0;
                }
                if (Variaveis.varias.s6 == 60) {
                    Variaveis.varias.s6 += 1;
                    Variaveis.varias.s6 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 6
    public void FinalizarCronometro6(){
       // Encerra as tarefas
       if (Variaveis.varias.timer6 != null) {
            Variaveis.varias.timer6.cancel();
            //CronometroQuart6.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 6
    public void reiniciarCronometro6() {
        Variaveis.varias.h6 = 0;
        Variaveis.varias.m6 = 0;
        Variaveis.varias.s6 = 0;
        atualizarCronometro6();

        // Inicie um novo Timer
        Cronometro6();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 6
    private void atualizarCronometro6() {
        CronometroQuart6.setText(Variaveis.varias.h6 + ":" + Variaveis.varias.m6 + ":" + Variaveis.varias.s6);
    }
    
    //-----------> INICIO DO QUARTO NUMERO 4 <--------------//
    //MOUSE PASSA POR CIMA DO 'QUARTO 4'
    private void Quarto4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto4MouseEntered
        Quarto4.repaint();
        PanelQuart4.setBackground(new Color(0, 0, 0, 100));
        PanelQuart4.setVisible(true);
        if (BtnQuart4.getBackground() == Color.GREEN) {
            BtnFinalQuart4.setVisible(false);
            BtnReservQuart4.setVisible(true);
        } else {
            BtnReservQuart4.setVisible(false);
            BtnFinalQuart4.setVisible(true);
        }
    }//GEN-LAST:event_Quarto4MouseEntered

    //MOUSE SAI DE CIMA DO 'QUARTO 4'
    private void Quarto4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto4MouseExited
        Quarto4.repaint();
        PanelQuart4.setVisible(false);
        BtnReservQuart4.setVisible(false);
        BtnFinalQuart4.setVisible(false);
    }//GEN-LAST:event_Quarto4MouseExited

    private void BtnReservQuart4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart4MouseMoved
        Quarto4.repaint();
        PanelQuart4.setVisible(true);
        BtnReservQuart4.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart4MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart4MousePressed
        Quarto4.repaint();
        BtnQuart4.setBackground(Color.RED);
        BtnReservQuart4.setVisible(false);
        BtnFinalQuart4.setVisible(true);
        op.reiniciarCronometro4();
        
        LocalTime horaAtualQ4 = LocalTime.now();
        int hora = horaAtualQ4.getHour();
        int minuto = horaAtualQ4.getMinute();
        
        horaQ4.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart4MousePressed

    private void BtnFinalQuart4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart4MouseMoved
        Quarto4.repaint();
        PanelQuart4.setVisible(true);
        BtnFinalQuart4.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart4MouseMoved

    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart4MousePressed
        Quarto4.repaint();
        BtnQuart4.setBackground(Color.GREEN);
        BtnFinalQuart4.setVisible(false);
        BtnReservQuart4.setVisible(true);
        op.FinalizarCronometro4();
        
        String textoCronometro4 = CronometroQuart4.getText();
        
        String[] partes = textoCronometro4.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            //VALOR = 25 REAIS
            Variaveis.varias.setQ4(25);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora <=1 && minuto >= 11) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ4(40);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora == 2 && minuto <= 10) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ4(40);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora == 2 && minuto >= 11) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ4(50);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora == 3 && minuto <= 10) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ4(50);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo4 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ4(calculo4);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo4 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ4(calculo4);
            System.out.println(Variaveis.varias.getQ4());
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo4 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ4(calculo4);
            System.out.println(Variaveis.varias.getQ4());
        }
        
        try {
            removeAll();
            FinalQuart4 fq4 = new FinalQuart4();
            getParent().add(fq4);
            this.setVisible(false);
            fq4.setMaximum(true);
            fq4.setVisible(true);
            repaint();
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "(xdE03) Não Conseguimos Voltar a Página.", "XDetalfa Entertainment Informa", JOptionPane.INFORMATION_MESSAGE);
            dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_BtnFinalQuart4MousePressed
    //-----------> FINAL DO QUARTO NUMERO 4 <--------------//
            
    //TEMPORIZADOR DO QUARTO 4
    public void Cronometro4(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer4 = new Timer();
        Variaveis.varias.timer4.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s4 += 1;
                atualizarCronometro4();

                if (Variaveis.varias.s4 == 60) {
                    Variaveis.varias.m4 += 1;
                    Variaveis.varias.s4 = 0;
                }
                if (Variaveis.varias.m4 == 60) {
                    Variaveis.varias.h4 += 1;
                    Variaveis.varias.m4 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 4
    public void FinalizarCronometro4(){
       // Encerra as tarefas
       if (Variaveis.varias.timer4 != null) {
            Variaveis.varias.timer4.cancel();
            //CronometroQuart4.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 4
    public void reiniciarCronometro4() {
        Variaveis.varias.h4 = 0;
        Variaveis.varias.m4 = 0;
        Variaveis.varias.s4 = 0;
        atualizarCronometro4();

        // Inicie um novo Timer
        Cronometro4();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 4
    private void atualizarCronometro4() {
        CronometroQuart4.setText(Variaveis.varias.h4 + ":" + Variaveis.varias.m4 + ":" + Variaveis.varias.s4);
    }
    
    //-----------> INICIO DO QUARTO NUMERO 8 <--------------//
    private void Quarto8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto8MouseEntered
        Quarto8.repaint();
        PanelQuart8.setBackground(new Color(0, 0, 0, 100));
        PanelQuart8.setVisible(true);
        if (BtnQuart8.getBackground() == Color.GREEN) {
            BtnFinalQuart8.setVisible(false);
            BtnReservQuart8.setVisible(true);
        } else {
            BtnReservQuart8.setVisible(false);
            BtnFinalQuart8.setVisible(true);
        }
    }//GEN-LAST:event_Quarto8MouseEntered

    private void BtnReservQuart8MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart8MouseMoved
        Quarto8.repaint();
        PanelQuart8.setVisible(true);
        BtnReservQuart8.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart8MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart8MousePressed
        Quarto8.repaint();
        BtnQuart8.setBackground(Color.RED);
        BtnReservQuart8.setVisible(false);
        BtnFinalQuart8.setVisible(true);
        op.reiniciarCronometro8();
        
        LocalTime horaAtualQ8 = LocalTime.now();
        int hora = horaAtualQ8.getHour();
        int minuto = horaAtualQ8.getMinute();
        
        horaQ8.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart8MousePressed

    private void BtnFinalQuart8MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart8MouseMoved
        Quarto8.repaint();
        PanelQuart8.setVisible(true);
        BtnFinalQuart8.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart8MouseMoved

    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart8MousePressed
        Quarto8.repaint();
        BtnQuart8.setBackground(Color.GREEN);
        BtnFinalQuart8.setVisible(false);
        BtnReservQuart8.setVisible(true);
        op.FinalizarCronometro8();
        
        String textoCronometro8 = CronometroQuart8.getText();
        
        String[] partes = textoCronometro8.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            //VALOR = 25 REAIS
            Variaveis.varias.setQ8(25);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora <=1 && minuto >= 11) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ8(40);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora == 2 && minuto <= 10) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ8(40);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora == 2 && minuto >= 11) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ8(50);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora == 3 && minuto <= 10) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ8(50);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo8 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ8(calculo8);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo8 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ8(calculo8);
            System.out.println(Variaveis.varias.getQ8());
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo8 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ8(calculo8);
            System.out.println(Variaveis.varias.getQ8());
        }
        
        CronometroQuart8.setText("00:00:00");
        horaQ8.setText("");
    }//GEN-LAST:event_BtnFinalQuart8MousePressed

    //MOUSE SAI DE CIMA DO 'QUARTO 8'
    private void Quarto8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto8MouseExited
        Quarto8.repaint();
        PanelQuart8.setVisible(false);
        BtnReservQuart8.setVisible(false);
        BtnFinalQuart8.setVisible(false);
    }//GEN-LAST:event_Quarto8MouseExited
    //-----------> FINAL DO QUARTO NUMERO 8 <--------------//
    
    //TEMPORIZADOR DO QUARTO 8
    public void Cronometro8(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer8 = new Timer();
        Variaveis.varias.timer8.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s8 += 1;
                atualizarCronometro8();

                if (Variaveis.varias.s8 == 60) {
                    Variaveis.varias.m8 += 1;
                    Variaveis.varias.s8 = 0;
                }
                if (Variaveis.varias.m8 == 60) {
                    Variaveis.varias.h8 += 1;
                    Variaveis.varias.m8 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 8
    public void FinalizarCronometro8(){
       // Encerra as tarefas
       if (Variaveis.varias.timer8 != null) {
            Variaveis.varias.timer8.cancel();
            //CronometroQuart8.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 8
    public void reiniciarCronometro8() {
        Variaveis.varias.h8 = 0;
        Variaveis.varias.m8 = 0;
        Variaveis.varias.s8 = 0;
        atualizarCronometro8();

        // Inicie um novo Timer
        Cronometro8();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 8
    private void atualizarCronometro8() {
        CronometroQuart8.setText(Variaveis.varias.h8 + ":" + Variaveis.varias.m8 + ":" + Variaveis.varias.s8);
    }
    
    //-----------> INICIO DO QUARTO NUMERO 10 <--------------//
    private void Quarto10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto10MouseEntered
        Quarto10.repaint();
        PanelQuart10.setBackground(new Color(0, 0, 0, 100));
        PanelQuart10.setVisible(true);
        if (BtnQuart10.getBackground() == Color.GREEN) {
            BtnFinalQuart10.setVisible(false);
            BtnReservQuart10.setVisible(true);
        } else {
            BtnReservQuart10.setVisible(false);
            BtnFinalQuart10.setVisible(true);
        }
    }//GEN-LAST:event_Quarto10MouseEntered

    //MOUSE SAI DE CIMA DO 'QUARTO 10'
    private void Quarto10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto10MouseExited
        Quarto10.repaint();
        PanelQuart10.setVisible(false);
        BtnReservQuart10.setVisible(false);
        BtnFinalQuart10.setVisible(false);
    }//GEN-LAST:event_Quarto10MouseExited

    private void BtnReservQuart10MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart10MouseMoved
        Quarto10.repaint();
        PanelQuart10.setVisible(true);
        BtnReservQuart10.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart10MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart10MousePressed
        Quarto10.repaint();
        BtnQuart10.setBackground(Color.RED);
        BtnReservQuart10.setVisible(false);
        BtnFinalQuart10.setVisible(true);
        op.reiniciarCronometro10();
        
        LocalTime horaAtualQ10 = LocalTime.now();
        int hora = horaAtualQ10.getHour();
        int minuto = horaAtualQ10.getMinute();
        
        horaQ10.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart10MousePressed

    private void BtnFinalQuart10MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart10MouseMoved
        Quarto10.repaint();
        PanelQuart10.setVisible(true);
        BtnFinalQuart10.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart10MouseMoved

    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart10MousePressed
        Quarto10.repaint();
        BtnQuart10.setBackground(Color.GREEN);
        BtnFinalQuart10.setVisible(false);
        BtnReservQuart10.setVisible(true);
        op.FinalizarCronometro10();
        
        String textoCronometro10 = CronometroQuart10.getText();
        
        String[] partes = textoCronometro10.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            //VALOR = 25 REAIS
            Variaveis.varias.setQ10(25);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora <=1 && minuto >= 11) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ10(40);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora == 2 && minuto <= 10) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ10(40);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora == 2 && minuto >= 11) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ10(50);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora == 3 && minuto <= 10) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ10(50);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo10 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ10(calculo10);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo10 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ10(calculo10);
            System.out.println(Variaveis.varias.getQ10());
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo10 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ10(calculo10);
            System.out.println(Variaveis.varias.getQ10());
        }
        
        CronometroQuart10.setText("00:00:00");
        horaQ10.setText("");
    }//GEN-LAST:event_BtnFinalQuart10MousePressed
    //-----------> FINAL DO QUARTO NUMERO 10 <--------------//
    
    //TEMPORIZADOR DO QUARTO 10
    public void Cronometro10(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer10 = new Timer();
        Variaveis.varias.timer10.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s10 += 1;
                atualizarCronometro10();

                if (Variaveis.varias.s10 == 60) {
                    Variaveis.varias.m10 += 1;
                    Variaveis.varias.s10 = 0;
                }
                if (Variaveis.varias.m10 == 60) {
                    Variaveis.varias.h10 += 1;
                    Variaveis.varias.m10 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 10
    public void FinalizarCronometro10(){
       // Encerra as tarefas
       if (Variaveis.varias.timer10 != null) {
            Variaveis.varias.timer10.cancel();
            //CronometroQuart10.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 10
    public void reiniciarCronometro10() {
        Variaveis.varias.h10 = 0;
        Variaveis.varias.m10 = 0;
        Variaveis.varias.s10 = 0;
        atualizarCronometro10();

        // Inicie um novo Timer
        Cronometro10();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 10
    private void atualizarCronometro10() {
        CronometroQuart10.setText(Variaveis.varias.h10 + ":" + Variaveis.varias.m10 + ":" + Variaveis.varias.s10);
    }
    
    //-----------> INICIO DO QUARTO NUMERO 12 <--------------//
    private void Quarto12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto12MouseEntered
        Quarto12.repaint();
        PanelQuart12.setBackground(new Color(0, 0, 0, 100));
        PanelQuart12.setVisible(true);
        if (BtnQuart12.getBackground() == Color.GREEN) {
            BtnFinalQuart12.setVisible(false);
            BtnReservQuart12.setVisible(true);
        } else {
            BtnReservQuart12.setVisible(false);
            BtnFinalQuart12.setVisible(true);
        }
    }//GEN-LAST:event_Quarto12MouseEntered

    //MOUSE SAI DE CIMA DO 'QUARTO 12'
    private void Quarto12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto12MouseExited
        Quarto12.repaint();
        PanelQuart12.setVisible(false);
        BtnReservQuart12.setVisible(false);
        BtnFinalQuart12.setVisible(false);
    }//GEN-LAST:event_Quarto12MouseExited

    private void BtnReservQuart12MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart12MouseMoved
        Quarto12.repaint();
        PanelQuart12.setVisible(true);
        BtnReservQuart12.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart12MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart12MousePressed
        Quarto12.repaint();
        BtnQuart12.setBackground(Color.RED);
        BtnReservQuart12.setVisible(false);
        BtnFinalQuart12.setVisible(true);
        op.reiniciarCronometro12();
        
        LocalTime horaAtualQ12 = LocalTime.now();
        int hora = horaAtualQ12.getHour();
        int minuto = horaAtualQ12.getMinute();
        
        horaQ12.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart12MousePressed

    private void BtnFinalQuart12MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart12MouseMoved
        Quarto12.repaint();
        PanelQuart12.setVisible(true);
        BtnFinalQuart12.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart12MouseMoved

    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart12MousePressed
        Quarto12.repaint();
        BtnQuart12.setBackground(Color.GREEN);
        BtnFinalQuart12.setVisible(false);
        BtnReservQuart12.setVisible(true);
        op.FinalizarCronometro12();
        
        String textoCronometro12 = CronometroQuart12.getText();
        
        String[] partes = textoCronometro12.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            //VALOR = 25 REAIS
            Variaveis.varias.setQ12(25);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora <=1 && minuto >= 11) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ12(40);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora == 2 && minuto <= 10) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ12(40);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora == 2 && minuto >= 11) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ12(50);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora == 3 && minuto <= 10) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ12(50);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo12 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ12(calculo12);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo12 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ12(calculo12);
            System.out.println(Variaveis.varias.getQ12());
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo12 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ12(calculo12);
            System.out.println(Variaveis.varias.getQ12());
        }
        
        CronometroQuart12.setText("00:00:00");
        horaQ12.setText("");
    }//GEN-LAST:event_BtnFinalQuart12MousePressed
    //-----------> FINAL DO QUARTO NUMERO 12 <--------------//
    
    //TEMPORIZADOR DO QUARTO 12
    public void Cronometro12(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer12 = new Timer();
        Variaveis.varias.timer12.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s12 += 1;
                atualizarCronometro12();

                if (Variaveis.varias.s12 == 60) {
                    Variaveis.varias.m12 += 1;
                    Variaveis.varias.s12 = 0;
                }
                if (Variaveis.varias.m12 == 60) {
                    Variaveis.varias.h12 += 1;
                    Variaveis.varias.m12 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 12
    public void FinalizarCronometro12(){
       // Encerra as tarefas
       if (Variaveis.varias.timer12 != null) {
            Variaveis.varias.timer12.cancel();
            //CronometroQuart12.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 12
    public void reiniciarCronometro12() {
        Variaveis.varias.h12 = 0;
        Variaveis.varias.m12 = 0;
        Variaveis.varias.s12 = 0;
        atualizarCronometro12();

        // Inicie um novo Timer
        Cronometro12();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 12
    private void atualizarCronometro12() {
        CronometroQuart12.setText(Variaveis.varias.h12 + ":" + Variaveis.varias.m12 + ":" + Variaveis.varias.s12);
    }
    
    //-----------> INICIO DO QUARTO NUMERO 14 <--------------//
    private void Quarto14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto14MouseEntered
        Quarto14.repaint();
        PanelQuart14.setBackground(new Color(0, 0, 0, 100));
        PanelQuart14.setVisible(true);
        if (BtnQuart14.getBackground() == Color.GREEN) {
            BtnFinalQuart14.setVisible(false);
            BtnReservQuart14.setVisible(true);
        } else {
            BtnReservQuart14.setVisible(false);
            BtnFinalQuart14.setVisible(true);
        }
    }//GEN-LAST:event_Quarto14MouseEntered

    //MOUSE SAI DE CIMA DO 'QUARTO 14'
    private void Quarto14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarto14MouseExited
        Quarto14.repaint();
        PanelQuart14.setVisible(false);
        BtnReservQuart14.setVisible(false);
        BtnFinalQuart14.setVisible(false);
    }//GEN-LAST:event_Quarto14MouseExited

    private void BtnReservQuart14MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart14MouseMoved
        Quarto14.repaint();
        PanelQuart14.setVisible(true);
        BtnReservQuart14.setVisible(true);
    }//GEN-LAST:event_BtnReservQuart14MouseMoved

    //BTN 'RESERVAR' PRECIONADO
    private void BtnReservQuart14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnReservQuart14MousePressed
        Quarto14.repaint();
        BtnQuart14.setBackground(Color.RED);
        BtnReservQuart14.setVisible(false);
        BtnFinalQuart14.setVisible(true);
        op.reiniciarCronometro14();
        
        LocalTime horaAtualQ14 = LocalTime.now();
        int hora = horaAtualQ14.getHour();
        int minuto = horaAtualQ14.getMinute();
        
        horaQ14.setText(hora + ":" + minuto);
    }//GEN-LAST:event_BtnReservQuart14MousePressed

    private void BtnFinalQuart14MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart14MouseMoved
        Quarto14.repaint();
        PanelQuart14.setVisible(true);
        BtnFinalQuart14.setVisible(true);
    }//GEN-LAST:event_BtnFinalQuart14MouseMoved

    //BTN 'FINALIZAR' PRECIONADO
    private void BtnFinalQuart14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFinalQuart14MousePressed
        Quarto14.repaint();
        BtnQuart14.setBackground(Color.GREEN);
        BtnFinalQuart14.setVisible(false);
        BtnReservQuart14.setVisible(true);
        op.FinalizarCronometro14();
        
        String textoCronometro14 = CronometroQuart4.getText();
        
        String[] partes = textoCronometro14.split(":");        
        String horas = partes[0];
        String minutos = partes[1];
        String segundos = partes[2];
        
        int hora = Integer.parseInt(horas);
        int minuto = Integer.parseInt(minutos);
        //int segundo = Integer.parseInt(segundos);
        
        if (hora <= 1 && minuto <= 10) {
            //VALOR = 25 REAIS
            Variaveis.varias.setQ14(25);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora <=1 && minuto >= 11) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ14(40);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora == 2 && minuto <= 10) {
            //VALOR = 40 REAIS
            Variaveis.varias.setQ14(40);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora == 2 && minuto >= 11) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ14(50);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora == 3 && minuto <= 10) {
            //VALOR = 50 REAIS
            Variaveis.varias.setQ14(50);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora == 3 && minuto >= 11) {
            //VALOR = 50 + 15 A PARTIR DA 4 HORA
            int calculo14 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ14(calculo14);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora > 3 && minuto <= 10) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo14 = hora * Variaveis.varias.maisHora;
            Variaveis.varias.setQ14(calculo14);
            System.out.println(Variaveis.varias.getQ14());
        } else if (hora > 3 && minuto >= 11) {
            //VALOR = 15 REAIS + 50 REAIS DA ULTIMA HORA
            int calculo14 = hora * Variaveis.varias.maisHora + Variaveis.varias.maisHora;
            Variaveis.varias.setQ14(calculo14);
            System.out.println(Variaveis.varias.getQ14());
        }
        
        CronometroQuart14.setText("00:00:00");
        horaQ14.setText("");
    }//GEN-LAST:event_BtnFinalQuart14MousePressed

    private void BtnFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFecharMouseClicked
        dispose();
        System.exit(0);
    }//GEN-LAST:event_BtnFecharMouseClicked
    //-----------> FINAL DO QUARTO NUMERO 14 <--------------//
   
    //TEMPORIZADOR DO QUARTO 14
    public void Cronometro14(){
        int delay = 0; // Atraso inicial (em milissegundos)
        int interval = 1000; // Intervalo entre as execuções (em milissegundos)
        
        Variaveis.varias.timer14 = new Timer();
        Variaveis.varias.timer14.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {        
                Variaveis.varias.s14 += 1;
                atualizarCronometro14();

                if (Variaveis.varias.s14 == 60) {
                    Variaveis.varias.m14 += 1;
                    Variaveis.varias.s14 = 0;
                }
                if (Variaveis.varias.m14 == 60) {
                    Variaveis.varias.h14 += 1;
                    Variaveis.varias.m14 = 0;
                }
            }
        }, delay, interval);
    }
        
    //FINALIZAR O CRONOMETRO DO QUARTO 14
    public void FinalizarCronometro14(){
       // Encerra as tarefas
       if (Variaveis.varias.timer14 != null) {
            Variaveis.varias.timer4.cancel();
            //CronometroQuart14.setText("00:00:00");
        }
    }
    //REINICIA O CRONOMETRO DO QUARTO 14
    public void reiniciarCronometro14() {
        Variaveis.varias.h14 = 0;
        Variaveis.varias.m14 = 0;
        Variaveis.varias.s14 = 0;
        atualizarCronometro14();

        // Inicie um novo Timer
        Cronometro14();
    }
    //ATUALIZA O CRONOMETRO DO QUARTO 14
    private void atualizarCronometro14() {
        CronometroQuart14.setText(Variaveis.varias.h14 + ":" + Variaveis.varias.m14 + ":" + Variaveis.varias.s14);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnFechar;
    private javax.swing.JLabel BtnFinalQuart10;
    private javax.swing.JLabel BtnFinalQuart12;
    private javax.swing.JLabel BtnFinalQuart14;
    public javax.swing.JLabel BtnFinalQuart4;
    private javax.swing.JLabel BtnFinalQuart6;
    private javax.swing.JLabel BtnFinalQuart8;
    private javax.swing.JPanel BtnQuart10;
    private javax.swing.JPanel BtnQuart12;
    private javax.swing.JPanel BtnQuart14;
    private javax.swing.JPanel BtnQuart4;
    private javax.swing.JPanel BtnQuart6;
    private javax.swing.JPanel BtnQuart8;
    private javax.swing.JLabel BtnReservQuart10;
    private javax.swing.JLabel BtnReservQuart12;
    private javax.swing.JLabel BtnReservQuart14;
    public javax.swing.JLabel BtnReservQuart4;
    private javax.swing.JLabel BtnReservQuart6;
    private javax.swing.JLabel BtnReservQuart8;
    public static javax.swing.JLabel CronometroQuart10;
    public static javax.swing.JLabel CronometroQuart12;
    public static javax.swing.JLabel CronometroQuart14;
    public static javax.swing.JLabel CronometroQuart4;
    public static javax.swing.JLabel CronometroQuart6;
    public static javax.swing.JLabel CronometroQuart8;
    private javax.swing.JPanel PanelQuart10;
    private javax.swing.JPanel PanelQuart12;
    private javax.swing.JPanel PanelQuart14;
    private javax.swing.JPanel PanelQuart4;
    private javax.swing.JPanel PanelQuart6;
    private javax.swing.JPanel PanelQuart8;
    private javax.swing.JPanel QuartDisponivel;
    private javax.swing.JPanel QuartOcupado;
    private javax.swing.JPanel Quarto10;
    private javax.swing.JPanel Quarto12;
    private javax.swing.JPanel Quarto14;
    private javax.swing.JPanel Quarto4;
    private javax.swing.JPanel Quarto6;
    private javax.swing.JPanel Quarto8;
    private javax.swing.JLabel horaQ10;
    private javax.swing.JLabel horaQ12;
    private javax.swing.JLabel horaQ14;
    public static javax.swing.JLabel horaQ4;
    private javax.swing.JLabel horaQ6;
    private javax.swing.JLabel horaQ8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}